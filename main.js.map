{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/error/error.component.css","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/greetings/greetings.component.css","webpack:///./src/app/greetings/greetings.component.html","webpack:///./src/app/greetings/greetings.component.ts","webpack:///./src/app/list-todos/list-todos.component.css","webpack:///./src/app/list-todos/list-todos.component.html","webpack:///./src/app/list-todos/list-todos.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/service/data/todo-data.service.ts","webpack:///./src/app/service/data/welcome-data.service.ts","webpack:///./src/app/service/hardcoded-authentication.service.ts","webpack:///./src/app/service/route-guard.service.ts","webpack:///./src/app/todo/todo.component.css","webpack:///./src/app/todo/todo.component.html","webpack:///./src/app/todo/todo.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { componentFactoryName } from '@angular/compiler';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ErrorComponent } from './error/error.component';\n\nimport { GreetingsComponent } from './greetings/greetings.component';\nimport { ListTodosComponent } from './list-todos/list-todos.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { RouteGuardService } from './service/route-guard.service';\nimport { TodoComponent } from './todo/todo.component';\n\nconst routes: Routes = [\n  { path: 'login', component : LoginComponent},\n  { path: 'greetings/:name', component : GreetingsComponent, canActivate:[RouteGuardService]},\n  { path: 'todos', component : ListTodosComponent, canActivate:[RouteGuardService]},\n  { path: '', component : LoginComponent, canActivate:[RouteGuardService]},\n  { path: 'logout', component : LogoutComponent, canActivate:[RouteGuardService]},\n  { path: 'todos/:id', component : TodoComponent, canActivate:[RouteGuardService]},\n\n  { path: '**', component : ErrorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<!--<app-login></app-login>-->\\n\\n<div class=\\\"container\\\">\\n    <app-menu></app-menu>\\n    <router-outlet></router-outlet>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todo';\n  text = 'Hej allihoppa! Trevligt att traffas dig!'\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GreetingsComponent } from './greetings/greetings.component';\nimport { LoginComponent } from './login/login.component';\nimport { ErrorComponent } from './error/error.component';\nimport { ListTodosComponent } from './list-todos/list-todos.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TodoComponent } from './todo/todo.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GreetingsComponent,\n    LoginComponent,\n    ErrorComponent,\n    ListTodosComponent,\n    MenuComponent,\n    FooterComponent,\n    LogoutComponent,\n    TodoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yL2Vycm9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".footer{\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    background-color:lavender;\\r\\n    padding-top: 10px;\\r\\n    padding-bottom: 0px;\\r\\n    left: 0px;\\r\\n    right: 0px\\r\\n\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0lBQ25CLFVBQVU7SUFDViwwQkFBMEI7SUFDMUIsa0JBQWtCO0lBQ2xCLG9CQUFvQjtJQUNwQixVQUFVO0lBQ1YsVUFBVTs7Q0FFYiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb290ZXJ7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOmxhdmVuZGVyO1xyXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMHB4O1xyXG4gICAgbGVmdDogMHB4O1xyXG4gICAgcmlnaHQ6IDBweFxyXG5cclxufSJdfQ== */\"","module.exports = \"<footer class=\\\"footer\\\">\\n    <div class=\\\"container justify-content-end\\\">\\n       <span class=\\\"text-muted\\\"> This is a personalized angular application reserving all rights!</span>\\n    </div>\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyZWV0aW5ncy9ncmVldGluZ3MuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>{{message}}!!</h1>\\n\\n<div class=\\\"container\\\">\\n  you can manage your TODO list <a routerLink='/todos'> click here</a>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  Click here to get a customized welcome message-->\\n  <button (click)=\\\"getWelcomeMessageWithParameter()\\\" class=\\\"btn btn-success\\\">Get Welcome Message</button>\\n</div>\\n\\n<div class=\\\"container\\\" *ngIf=\\\"welcomeMessageFromService\\\">\\n  <h2>customized welcome message</h2> \\n  {{welcomeMessageFromService}}\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { WelcomeDataService } from '../service/data/welcome-data.service';\n\n@Component({\n  selector: 'app-greetings',\n  templateUrl: './greetings.component.html',\n  styleUrls: ['./greetings.component.css']\n})\nexport class GreetingsComponent implements OnInit {\n\n  message = 'Valkommen till din hemsidan!!'\n  name = ''\n  welcomeMessageFromService: string\n  constructor(private route: ActivatedRoute, private service: WelcomeDataService) { }\n\n  ngOnInit() {\n    //console.log(this.message)\n    this.name = this.route.snapshot.params['name']\n  }\n\n  getWelcomeMessage(){\n\n    //meaning of subscribe => when the observable is successful, call handleSuccessfulResponse\n    //advantage of using observable is that we dont need to let the thread hanging, the code\n    //executes after the declaration.\n   this.service.executeHelloWorldBeanService().subscribe(\n      response => this.handleSuccessfulResponse(response), //declaration     <parameters for subscribe>\n      error => this.handleErrorResponse(error)\n      \n      // response => console.log(response.message)\n     );\n    //console.log(\"get welcome message!\")\n  }\n\n  getWelcomeMessageWithParameter(){\n\n    //meaning of subscribe => when the observable is successful, call handleSuccessfulResponse\n    //advantage of using observable is that we dont need to let the thread hanging, the code\n    //executes after the declaration.\n   this.service.executeHelloWorldBeanServicePathVariable(this.name).subscribe(\n      response => this.handleSuccessfulResponse(response), //declaration     <parameters for subscribe>\n      error => this.handleErrorResponse(error)\n      \n      // response => console.log(response.message)\n     );\n    //console.log(\"get welcome message!\")\n  }\n\n  handleSuccessfulResponse(response) {\n    //console.log(response);\n    //console.log(response.message);\n    this.welcomeMessageFromService = response.message;\n  }\n\n  handleErrorResponse(error) {\n   // console.log(error)\n   // console.log(error.error)\n   // console.log(error.error.message)\n\n    this.welcomeMessageFromService = error.error.message;\n  }\n\n}\n","module.exports = \".styled-table {\\r\\n  border-collapse: collapse;\\r\\n  margin: 25px 0;\\r\\n  font-size: 0.9em;\\r\\n  font-family: sans-serif;\\r\\n  min-width: 400px;\\r\\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGlzdC10b2Rvcy9saXN0LXRvZG9zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwwQkFBMEI7RUFDMUIsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQix3QkFBd0I7RUFDeEIsaUJBQWlCO0VBQ2pCLHlDQUF5QztDQUMxQyIsImZpbGUiOiJzcmMvYXBwL2xpc3QtdG9kb3MvbGlzdC10b2Rvcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnN0eWxlZC10YWJsZSB7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICBtYXJnaW46IDI1cHggMDtcclxuICBmb250LXNpemU6IDAuOWVtO1xyXG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gIG1pbi13aWR0aDogNDAwcHg7XHJcbiAgYm94LXNoYWRvdzogMCAwIDIwcHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcclxufSJdfQ== */\"","module.exports = \"<h1>My tasks!</h1>\\n\\n<div class=\\\"alert alert-success\\\" *ngIf=\\\"message\\\">{{message}}</div>\\n\\n<div class=\\\"container\\\">\\n  <table class=\\\"table\\\" >\\n    <thead>\\n      <tr>\\n        <th>ID</th>\\n        <th>Description</th>\\n        <th>IsDone</th>\\n        <th>Date</th>\\n        <th>Actions</th>\\n        <th>Actions</th>\\n\\n      </tr>\\n\\n    </thead>\\n    <tbody>\\n      <tr *ngFor='let todo of todos'>\\n        <td>{{todo.id}}</td>\\n        <td>{{todo.description}}</td>\\n        <td>{{todo.done}}</td>\\n        <td>{{todo.targetDate | date}}</td>  <!--using pipe to change format.-->\\n        <td><button (click)=\\\"deleteTodo(todo.id)\\\" class=\\\"btn btn-warning\\\">Delete</button></td>\\n        <td><button (click)=\\\"updateTodo(todo.id)\\\" class=\\\"btn btn-success\\\">Update</button></td>\\n      </tr>\\n\\n\\n    </tbody>\\n\\n\\n  </table>\\n\\n  <div class=\\\"row\\\">\\n    <td><button (click)=\\\"addTodo()\\\" class=\\\"btn btn-success\\\">Add</button></td>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TodoDataService } from '../service/data/todo-data.service';\n\nexport class Todo {\n  constructor(\n    public id: number,\n    public description: string,\n    public done: boolean,\n    public targetDate: Date\n  ) { }\n}\n\n@Component({\n  selector: 'app-list-todos',\n  templateUrl: './list-todos.component.html',\n  styleUrls: ['./list-todos.component.css']\n})\nexport class ListTodosComponent implements OnInit {\n\n  constructor(private todoService: TodoDataService, \n    private router:Router) { }\n\n  todos: Todo[]\n\n  message: string=\"\";\n\n\n  // Making it structured by using Todo class!!\n\n  //  Todos = [\n  //    { id: 1, description: 'Finish your thesis draft!', done: false, targetDate: new Date() },\n  //    { id: 2, description: 'Update your resume!', done: false, targetDate: new Date() },\n  //    { id: 3, description: 'Get a freaking JOB!', done: false, targetDate: new Date() }\n\n  //  ]\n\n  // Sort of unstructured format!\n\n  //Todos = [\n  //  { id: 1, description: 'Finish your thesis draft!' },\n  //  { id: 2, description: 'Update your resume!' },\n  //  { id: 3, description: 'Get a freaking JOB!!' }\n  //]\n\n  ngOnInit() {\n    this.refreshTodos();\n  }\n\n  refreshTodos(){\n    this.todoService.retireveAllTodos('harshal').subscribe(\n      response => {\n        console.log(response);\n        this.todos = response;\n      }\n    )\n  }\n\n  deleteTodo(id) {\n    console.log(`delete Todo ${id}`);\n    this.todoService.deleteTodo('harshal',id).subscribe(\n      response =>{\n        console.log(response);\n        this.message =`Delete of todo ${id} Successful!`;\n        this.refreshTodos();\n      }\n    )\n  }\n  updateTodo(id) {\n    console.log(`Todo updated ${id}`);\n    this.router.navigate(['todos',id]);\n  }\n\n  addTodo() {\n    this.router.navigate(['todos',-1]) //-1 represents this is a new todo task!\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1>Login</h1>\\n<div class=\\\"container\\\">\\n  <div class=\\\"alert alert-warning\\\" *ngIf = \\\"invalidLogin\\\">{{errormessage}}</div>\\n  <div>\\n    Login ID : <input type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\">\\n    password: <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\">\\n    <button (click)=handleLogin() class=\\\"btn btn-success\\\">Login</button>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HardcodedAuthenticationService } from '../service/hardcoded-authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  username = 'harshal'\n  password = ''\n  invalidLogin = false\n  errormessage = 'Invalid credentials entered. Try again!'\n\n\n  //Router\n  //Dependency injection\n\n  constructor(private router: Router, private hardcodedAuthenticationService: HardcodedAuthenticationService) { }\n\n  ngOnInit() {\n  }\n\n  handleLogin() {\n\n    // if (this.username === 'harshal' && this.password === 'Harshal#1') {\n    //redirect to greetings page!!\n\n    if (this.hardcodedAuthenticationService.authenticate(this.username, this.password)) {\n      this.router.navigate(['greetings', this.username])\n      this.invalidLogin = false\n    }\n    else {\n      this.invalidLogin = true\n    }\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>You are logged out. </h1>\\n\\n<div class=\\\"container\\\">Thank you for visiting!</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HardcodedAuthenticationService } from '../service/hardcoded-authentication.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private hardcodedAuthenticationService: HardcodedAuthenticationService) { }\n\n  ngOnInit() {\n    this.hardcodedAuthenticationService.logout();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<header>\\n    <nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n        <div><a href=\\\"\\\" class=\\\"navbar-brand\\\">Mywebsite</a></div>\\n\\n        <ul class=\\\"navbar-nav navbar-collapse justify-content-end\\\">\\n            <li><a *ngIf=\\\"hardcodedAuthenticationService.isUserLoggedIn()\\\" href=\\\"\\\" class=\\\"nav-link\\\">Home</a></li>\\n            <li><a *ngIf=\\\"hardcodedAuthenticationService.isUserLoggedIn()\\\" href=\\\"/todos\\\" class=\\\"nav-link\\\">Todos</a></li>\\n\\n        </ul>\\n\\n        <ul class=\\\"navbar-nav navbar-collapse justify-content-end\\\">\\n            <li><a *ngIf=\\\"!hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink=\\\"/login\\\" class=\\\"nav-link\\\">Login</a></li>\\n            <li><a *ngIf=\\\"hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink=\\\"/logout\\\" class=\\\"nav-link\\\">Logout</a></li>\\n\\n        </ul>\\n    </nav>\\n\\n</header>\"","import { Component, OnInit } from '@angular/core';\nimport { HardcodedAuthenticationService } from '../service/hardcoded-authentication.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  isUserLoggedIn: boolean = false\n\n  constructor(public hardcodedAuthenticationService: HardcodedAuthenticationService) { }\n\n  ngOnInit() {\n    this.isUserLoggedIn = this.hardcodedAuthenticationService.isUserLoggedIn();\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Todo } from 'src/app/list-todos/list-todos.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoDataService {\n\n  constructor(private http: HttpClient) { }\n\n  retireveAllTodos(username) {\n    return this.http.get<Todo[]>(`http://localhost:8080/users/${username}/todos`)\n  }\n\n  deleteTodo(username, id) {\n    return this.http.delete(`http://localhost:8080/users/${username}/todos/${id}`)\n  }\n  retrieveTodo(username, id) {\n    return this.http.get<Todo>(`http://localhost:8080/users/${username}/todos/${id}`)\n  }\n  updateTodo(username, id, todo) {\n    return this.http.put(`http://localhost:8080/users/${username}/todos/${id}`, todo)\n  }\n  createTodo(username, todo) {\n    return this.http.post(`http://localhost:8080/users/${username}/todos`, todo)\n  }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core';\n\nexport class HelloWorldBean {\n  constructor(public message: string) {}\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WelcomeDataService {\n\n  constructor(private http: HttpClient) { }\n\n  executeHelloWorldBeanService() {\n    return this.http.get<HelloWorldBean>('http://localhost:8080/Hello-World-bean')\n    //console.log(\"Executed Hello World Bean Service!\")\n  }\n\n  executeHelloWorldBeanServicePathVariable(name) {\n    return this.http.get<HelloWorldBean>(`http://localhost:8080/Hello-World/Path-Variable/${name}`)\n    //console.log(\"Executed Hello World Bean Service!\")\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HardcodedAuthenticationService {\n\n  constructor() { }\n\n  authenticate(username: string, password: string) {\n    //  console.log(`before ${this.isUserLoggedIn()}`);\n    if (username === \"harshal\" && password === 'Harshal#1') {\n      sessionStorage.setItem('AuthenticatedUser', username);\n    //  console.log('after ' + this.isUserLoggedIn());\n      return true\n    }\n    return false\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('AuthenticatedUser');\n    return !(user===null)\n  }\n\n  logout() {\n    sessionStorage.removeItem('AuthenticatedUser');\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { HardcodedAuthenticationService } from './hardcoded-authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n\n  constructor(private hardcodedAuthenticationService: HardcodedAuthenticationService, \n    private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n   if(this.hardcodedAuthenticationService.isUserLoggedIn()){\n    return true;\n   }\n   // route to login page if user not logged in.\n   this.router.navigate(['login']);\n   return false;\n}\n}\n","module.exports = \".ng-invalid:not(form){\\r\\n    border-left: 5px solid red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdG9kby90b2RvLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7Q0FDOUIiLCJmaWxlIjoic3JjL2FwcC90b2RvL3RvZG8uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uZy1pbnZhbGlkOm5vdChmb3JtKXtcclxuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgcmVkO1xyXG59Il19 */\"","module.exports = \"<h1>Update your todos..</h1>\\n<br>\\n\\n<div class=\\\"containter\\\">\\n  <div class=\\\"alert alert-warning\\\" *ngIf=\\\"todoDescription.dirty && todoDescription.invalid\\\">Enter description</div>\\n  <div class=\\\"alert alert-warning\\\" *ngIf=\\\"todoDate.dirty && todoDate.invalid\\\">Enter date for todo</div>\\n\\n  <form (ngSubmit)=\\\"!todoForm.invalid && saveTodo()\\\" #todoForm=\\\"ngForm\\\">\\n\\n    <fieldset class=\\\"form-group\\\">\\n      <label>Description</label>\\n      <input type=\\\"text\\\" #todoDescription=\\\"ngModel\\\" [(ngModel)]=\\\"todo.description\\\" name=\\\"description\\\" class=\\\"form-control\\\" required=\\\"required\\\">\\n    </fieldset>\\n\\n    <fieldset class=\\\"form-group\\\">\\n      <label>Target Date</label>\\n      <input type=\\\"date\\\" #todoDate=\\\"ngModel\\\"  #targetDate=\\\"ngModel\\\" [ngModel]=\\\"todo.targetDate | date:'yyyy-MM-dd' \\\"\\n        (ngModelChange)=\\\"todo.targetDate = $event\\\" class=\\\"form-control\\\" name=\\\"targetDate\\\" required=\\\"required\\\">\\n    </fieldset>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" >Save</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Todo } from '../list-todos/list-todos.component';\nimport { TodoDataService } from '../service/data/todo-data.service';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  id: number\n  todo: Todo\n\n  constructor(\n    private todoService: TodoDataService, private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.todo = new Todo(this.id, '', false, new Date());\n\n    if (this.id != -1) {\n      this.todoService.retrieveTodo('harshal', this.id).subscribe(\n        data => this.todo = data\n      )\n    }\n  }\n\n  saveTodo() {\n    if (this.id === -1) {\n      // Create a todo\n      this.todoService.createTodo('harshal', this.todo).subscribe(\n        data => {\n          console.log(data);\n          this.router.navigate(['todos']);\n        }\n      )\n    } else {\n      this.todoService.updateTodo('harshal', this.id, this.todo).subscribe(\n        data => {\n          console.log(data);\n          this.router.navigate(['todos']);\n        }\n      )\n    }\n\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}